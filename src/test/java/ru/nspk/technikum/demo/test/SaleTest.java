package ru.nspk.technikum.demo.test;

import org.junit.jupiter.api.Test;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.equalTo;

/**
 * Домашнее задание
 * Поднять wiremock с дефолтной конфигурацией, где по запросу с низким приоритетом будет отдаваться информация по определенному клиенту.
 * В рамках теста переопределить ответ на тот же запрос, получить новые данные и удалить переопределенный ответ после завершения
 *
 * Шаги
 * Wiremock поднят и работает.
 * В тесте запрашиваем из мока информацию по запросу GET /client/123 и получаем предустановленную информацию (имя, фамилия, день рождения, история заказов).
 * У пользователя изначально более 5 заказов, нашим методом возвращается скидка 10%.
 * Переопределяем в моке кол-во заказов пользователя на 1 и скидка будет отсутствовать. Убеждаемся в этом.
 * Удаляем заглушку с 1 заказом пользователя. У пользователя вернется скидка 10%
 */
public class SaleTest {

    private int getDiscount(int id) {

        int salesCount = 0; // здесь запрос в мок
        // Больше пяти заказов, скидка 10%
        return salesCount > 5 ? 10 : 0;
    }

    @Test
    public void getDiscountTest() {
        // Значение предустановленное в моке соответствует скидке 10%
        assertThat(10, equalTo(getDiscount(123)));
        // меняем историю покупок клиента в моке
        assertThat(0, equalTo(getDiscount(123)));
        // меняем историю покупок клиента на исходную
        assertThat(10, equalTo(getDiscount(123)));
    }
}
